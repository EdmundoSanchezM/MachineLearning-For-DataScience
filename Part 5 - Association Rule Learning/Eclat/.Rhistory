print("Hello world")
setwd("C:/Users/josue/Escritorio/MachineLearning/MachineLearning-For-DataScience/Part 5 - Association Rule Learning/Eclat")
# Preprocesado de Datos
#install.packages("arules")
library(arules)
dataset = read.csv("Market_Basket_Optimisation.csv", header = FALSE)
dataset = read.transactions("Market_Basket_Optimisation.csv",
sep = ",", rm.duplicates = TRUE)
summary(dataset)
itemFrequencyPlot(dataset, topN = 10)
# Entrenar algoritmo Eclat con el dataset
rules = eclat(data = dataset,
parameter = list(support = 0.003, minlen = 2))
# Visualizaci√≥n de los resultados
inspect(sort(rules, by = 'support')[1:10])
# Preprocesado de Datos
dataset = read.csv("Market_Basket_Optimisation.csv", header = FALSE)
#
library(arules)
dataset = read.transactions("Market_Basket_Optimisation.csv",
sep = ",", rm.duplicates = TRUE)
summary(dataset)
itemFrequencyPlot(dataset, topN = 10)
itemFrequencyPlot(dataset, topN = 100)
# Preprocesado de Datos
dataset = read.csv("Market_Basket_Optimisation.csv", header = FALSE)
# Visualizacion de los resultados
inspect(sort(rules, by = 'support')[1:10])
?eclat
# Entrenar algoritmo Eclat con el dataset
rules = eclat(data = dataset,
parameter = list(support = 0.003, minlen = 2))
# Preprocesado de Datos
dataset = read.csv("Market_Basket_Optimisation.csv", header = FALSE)
#Pasando a transaciones
library(arules)
dataset = read.transactions("Market_Basket_Optimisation.csv",
sep = ",", rm.duplicates = TRUE)
summary(dataset)
itemFrequencyPlot(dataset, topN = 100)
# Entrenar algoritmo Eclat con el dataset
rules = eclat(data = dataset,
parameter = list(support = 0.003, minlen = 2))
# Visualizacion de los resultados
inspect(sort(rules, by = 'support')[1:10])
# Visualizacion de los resultados
inspect(sort(rules, by = 'support')[10:20])
