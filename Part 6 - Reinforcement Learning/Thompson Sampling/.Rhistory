print("Hello world")
setwd("C:/Users/josue/Escritorio/MachineLearning/MachineLearning-For-DataScience/Part 6 - Reinforcement Learning/Thompson Sampling")
dataset = read.csv("Ads_CTR_Optimisation.csv")
# Implementar UCB
d = 10
N = 10000
number_of_rewards_1 = integer(d)
number_of_rewards_0 = integer(d)
ads_selected = integer(0)
total_reward = 0
for(n in 1:N){
max_random = 0
ad = 0
for(i in 1:d){
random_beta = beta(number_of_rewards_1[i]+1,number_of_rewards_0[i]+1)#
if(random_beta > max_random){
max_random = random_beta
ad = i
}
}
ads_selected = append(ads_selected, ad)
#En la vida real no es asi
reward = dataset[n, ad]
if(reward == 0)
number_of_rewards_0[ad] = number_of_rewards_0[ad] + 1
else
number_of_rewards_1[ad] = number_of_rewards_1[ad] + 1
total_reward = total_reward + reward
}
# Visualizaci贸n de resultados - Histograma
hist(ads_selected,
col = "lightblue",
main = "Histograma de los Anuncios",
xlab = "ID del Anuncio",
ylab = "Frecuencia absoluta del anuncio")
random_beta = beta(number_of_rewards_1[i]+1,number_of_rewards_0[i]+1)#Ojo aqui
dataset = read.csv("Ads_CTR_Optimisation.csv")
# Implementar UCB
d = 10
N = 10000
number_of_rewards_1 = integer(d)
number_of_rewards_0 = integer(d)
ads_selected = integer(0)
total_reward = 0
for(n in 1:N){
max_random = 0
ad = 0
for(i in 1:d){
random_beta = beta(number_of_rewards_1[i]+1,number_of_rewards_0[i]+1)#Ojo aqui
if(random_beta > max_random){
max_random = random_beta
ad = i
}
}
ads_selected = append(ads_selected, ad)
#En la vida real no es asi
reward = dataset[n, ad]
if(reward == 0)
number_of_rewards_0[ad] = number_of_rewards_0[ad] + 1
else
number_of_rewards_1[ad] = number_of_rewards_1[ad] + 1
total_reward = total_reward + reward
}
# Visualizaci贸n de resultados - Histograma
hist(ads_selected,
col = "lightblue",
main = "Histograma de los Anuncios",
xlab = "ID del Anuncio",
ylab = "Frecuencia absoluta del anuncio")
# Implementar el Muestreo de Thompson
d = 10
N = 10000
number_of_rewards_1 = integer(d)
number_of_rewards_0 = integer(d)
ads_selected = integer(0)
total_reward = 0
for(n in 1:N){
max_random = 0
ad = 0
for(i in 1:d){
random_beta = beta(number_of_rewards_1[i]+1,number_of_rewards_0[i]+1)#Ojo aqui
if(random_beta > max_random){
max_random = random_beta
ad = i
}
}
ads_selected = append(ads_selected, ad)
#En la vida real no es asi
reward = dataset[n, ad]
if(reward == 0){
number_of_rewards_0[ad] = number_of_rewards_0[ad] + 1
}else{
number_of_rewards_1[ad] = number_of_rewards_1[ad] + 1}
total_reward = total_reward + reward
}
# Visualizaci贸n de resultados - Histograma
hist(ads_selected,
col = "lightblue",
main = "Histograma de los Anuncios",
xlab = "ID del Anuncio",
ylab = "Frecuencia absoluta del anuncio")
for(n in 1:N){
max_random = 0
ad = 0
for(i in 1:d){
random_beta = rbeta(number_of_rewards_1[i]+1,number_of_rewards_0[i]+1)#Ojo aqui
if(random_beta > max_random){
max_random = random_beta
ad = i
}
}
ads_selected = append(ads_selected, ad)
#En la vida real no es asi
reward = dataset[n, ad]
if(reward == 0){
number_of_rewards_0[ad] = number_of_rewards_0[ad] + 1
}else{
number_of_rewards_1[ad] = number_of_rewards_1[ad] + 1
}
total_reward = total_reward + reward
}
# Implementar el Muestreo de Thompson
library(stats)
d = 10
N = 10000
number_of_rewards_1 = integer(d)
number_of_rewards_0 = integer(d)
ads_selected = integer(0)
total_reward = 0
for(n in 1:N){
max_random = 0
ad = 0
for(i in 1:d){
random_beta = rbeta(number_of_rewards_1[i]+1,number_of_rewards_0[i]+1)#Ojo aqui
if(random_beta > max_random){
max_random = random_beta
ad = i
}
}
ads_selected = append(ads_selected, ad)
#En la vida real no es asi
reward = dataset[n, ad]
if(reward == 0){
number_of_rewards_0[ad] = number_of_rewards_0[ad] + 1
}else{
number_of_rewards_1[ad] = number_of_rewards_1[ad] + 1
}
total_reward = total_reward + reward
}
for(n in 1:N){
max_random = 0
ad = 0
for(i in 1:d){
random_beta = rbeta(1,number_of_rewards_1[i]+1,number_of_rewards_0[i]+1)#Ojo aqui
if(random_beta > max_random){
max_random = random_beta
ad = i
}
}
ads_selected = append(ads_selected, ad)
#En la vida real no es asi
reward = dataset[n, ad]
if(reward == 0){
number_of_rewards_0[ad] = number_of_rewards_0[ad] + 1
}else{
number_of_rewards_1[ad] = number_of_rewards_1[ad] + 1
}
total_reward = total_reward + reward
}
# Implementar el Muestreo de Thompson
d = 10
N = 10000
number_of_rewards_1 = integer(d)
number_of_rewards_0 = integer(d)
ads_selected = integer(0)
total_reward = 0
for(n in 1:N){
max_random = 0
ad = 0
for(i in 1:d){
random_beta = rbeta(1,number_of_rewards_1[i]+1,number_of_rewards_0[i]+1)#Ojo aqui
if(random_beta > max_random){
max_random = random_beta
ad = i
}
}
ads_selected = append(ads_selected, ad)
#En la vida real no es asi
reward = dataset[n, ad]
if(reward == 0){
number_of_rewards_0[ad] = number_of_rewards_0[ad] + 1
}else{
number_of_rewards_1[ad] = number_of_rewards_1[ad] + 1
}
total_reward = total_reward + reward
}
dataset = read.csv("Ads_CTR_Optimisation.csv")
dataset = read.csv("Ads_CTR_Optimisation.csv")
# Implementar el Muestreo de Thompson
d = 10
N = 10000
number_of_rewards_1 = integer(d)
number_of_rewards_0 = integer(d)
ads_selected = integer(0)
total_reward = 0
for(n in 1:N){
max_random = 0
ad = 0
for(i in 1:d){
random_beta = rbeta(1,number_of_rewards_1[i]+1,number_of_rewards_0[i]+1)#Ojo aqui
if(random_beta > max_random){
max_random = random_beta
ad = i
}
}
ads_selected = append(ads_selected, ad)
#En la vida real no es asi
reward = dataset[n, ad]
if(reward == 0){
number_of_rewards_0[ad] = number_of_rewards_0[ad] + 1
}else{
number_of_rewards_1[ad] = number_of_rewards_1[ad] + 1
}
total_reward = total_reward + reward
}
# Visualizaci贸n de resultados - Histograma
hist(ads_selected,
col = "lightblue",
main = "Histograma de los Anuncios",
xlab = "ID del Anuncio",
ylab = "Frecuencia absoluta del anuncio")
?rbeta
