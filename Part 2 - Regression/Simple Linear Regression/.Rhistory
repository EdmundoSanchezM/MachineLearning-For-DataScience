print("Hello world")
setwd("C:/Users/josue/Escritorio/MachineLearning/MachineLearning-For-DataScience/Part 2 - Regression/Simple Linear Regression")
#importando dataset
dataset = read.csv('Salary_Data.csv')
#Dividir data set entre conjunto de entranamiento y testing
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary,SplitRatio = 0.8)
#Separando datos de entrenamiento y testing
training_set = subset(dataset,split==TRUE)
testing_set = subset(dataset,split==FALSE)
split = sample.split(dataset$Salary,SplitRatio = 2/3)
#Separando datos de entrenamiento y testing
training_set = subset(dataset,split==TRUE)
testing_set = subset(dataset,split==FALSE)
View(training_set)
View(training_set)
View(testing_set)
View(testing_set)
#Ajustar el modelo de regresion lineal simple con el conjunto de entrenamiento
#Variable dependiente en funcion(~) a la independiente
regressor = lm(formula = Salary ~ YearsExperience)
#Ajustar el modelo de regresion lineal simple con el conjunto de entrenamiento
#Variable dependiente en funcion(~) a la independiente
regressor = lm(formula = Salary ~ YearsExperience,tra)
#Ajustar el modelo de regresion lineal simple con el conjunto de entrenamiento
#Variable dependiente en funcion(~) a la independiente
regressor = lm(formula = Salary ~ YearsExperience,
training_set)
View(regressor)
#Ajustar el modelo de regresion lineal simple con el conjunto de entrenamiento
#Variable dependiente en funcion(~) a la independiente
regressor = lm(formula = Salary ~ YearsExperience,
training_set)
View(regressor)
View(regressor)
View(regressor)
resume(regressor)
summary(regressor)
#Ajustar el modelo de regresion lineal simple con el conjunto de entrenamiento
#Variable dependiente en funcion(~) a la independiente
regressor = lm(formula = Salary ~ YearsExperience,
training_set)
> summary(regressor)
summary(regressor)
#Ajustar el modelo de regresion lineal simple con el conjunto de entrenamiento
#Variable dependiente en funcion(~) a la independiente
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
summary(regressor)
#Ajustar el modelo de regresion lineal simple con el conjunto de entrenamiento
#Variable dependiente en funcion(~) a la independiente
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
summary(regressor)
#Predecir resultados con el conjunto de tests
#Funcion generica. Indicar modelo y data (data con el minos nombre de columnas)
y_pred = predict(regressor, newdata=testing_set)
y_pred
View(testing_set)
View(testing_set)
#importando dataset
dataset = read.csv('Salary_Data.csv')
#Dividir data set entre conjunto de entranamiento y testing
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary,SplitRatio = 2/3)
#Separando datos de entrenamiento y testing
training_set = subset(dataset,split==TRUE)
testing_set = subset(dataset,split==FALSE)
#Ajustar el modelo de regresion lineal simple con el conjunto de entrenamiento
#Variable dependiente en funcion(~) a la independiente
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
summary(regressor)
#Predecir resultados con el conjunto de tests
#Funcion generica. Indicar modelo y data (data con el minos nombre de columnas)
y_pred = predict(regressor, newdata=testing_set)
y_pred
View(testing_set)
install.packages("ggplot2")
library(ggplot2)
ggplot2() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),#colocando puntos
colour = "red")
ggplot2() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),#colocando puntos
colour = "red") +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata=training_set)#Colocando recta de regresion
))
#Visualizacion de los resultados en el conjunto de entrenamiento
library(ggplot2)
ggplot2() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),#colocando puntos
colour = "red") +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata=training_set)#Colocando recta de regresion
))
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = "red") +#colocando puntos
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata=training_set)),
colour = "blue") + #Colocando recta de regresion
ggtitle("Sueldo vs Años de Experiencia (Conjunto de Entrenamiento)")+
xlab("Años de Experiencia") +
ylab("Sueldo (en $)")
ggplot() +
geom_point(aes(x = testing_set$YearsExperience, y = testing_set$Salary),
colour = "red") +#colocando puntos
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata=training_set)),
colour = "blue") + #Colocando recta de regresion
ggtitle("Sueldo vs Años de Experiencia (Conjunto de Entrenamiento)")+
xlab("Años de Experiencia") +
ylab("Sueldo (en $)")
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = "red") +#colocando puntos
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata=training_set)),
colour = "blue") + #Colocando recta de regresion
ggtitle("Sueldo vs Años de Experiencia (Conjunto de Entrenamiento)")+
xlab("Años de Experiencia") +
ylab("Sueldo (en $)")
#Visualizacion de los resultados en el conjunto de testing
ggplot() +
geom_point(aes(x = testing_set$YearsExperience, y = testing_set$Salary),
colour = "red") +#colocando puntos
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata=training_set)),
colour = "blue") + #Colocando recta de regresion
ggtitle("Sueldo vs Años de Experiencia (Conjunto de Testing)")+
xlab("Años de Experiencia") +
ylab("Sueldo (en $)")
